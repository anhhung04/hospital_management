"""alter patient table

Revision ID: d59b0ba1d480
Revises: 7ea72d83ee82
Create Date: 2024-04-05 10:12:16.984750+07:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd59b0ba1d480'
down_revision: Union[str, None] = '7ea72d83ee82'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('medical_records_patient_id_fkey',
                       'medical_records', type_='foreignkey')
    op.drop_column('medical_records', 'patient_id')
    op.execute("""
        CREATE TYPE progresstype AS ENUM ('SCHEDULING', 'PROCESSING', 'FINISHED');
        ALTER TABLE patient_progresses ALTER COLUMN status TYPE progresstype USING status::text::progresstype;
    """)
    op.add_column('patients', sa.Column(
        'medical_record_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'patients', 'medical_records', [
                          'medical_record_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'patients', type_='foreignkey')
    op.drop_column('patients', 'medical_record_id')
    op.alter_column('patient_progresses', 'status',
                    existing_type=sa.Enum(
                        'SCHEDULING', 'PROCESSINT', 'FINISHED', name='progresstype'),
                    type_=postgresql.ENUM(
                        'SCHEDULING', 'PROCESSING', 'FINISHED', name='progressstatus'),
                    existing_nullable=True)
    op.add_column('medical_records', sa.Column(
        'patient_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('medical_records_patient_id_fkey',
                          'medical_records', 'patients', ['patient_id'], ['user_id'])
    # ### end Alembic commands ###
